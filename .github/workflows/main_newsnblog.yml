name: Push Docker Image to Google Artifact Registry

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Enter your name"
        required: true
        type: string
        default: "User"

jobs:
  push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Install PostgreSQL and jq and gsutil
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib jq


      
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (User Account)
        run: |
          echo "ya29.a0AeXRPp77TIbJzb4cE0ctartgZM9VjsEk0NWs5RsNu672pftodDqEpI0WArvVztcLNN4OTOk4xjpepIL1yfwSJSw4m7Ks-FvSxLSp67SM102525jqg0dQrIszZjNlNyliXMEcQcgJuCbuBGrd4Ome1jgXWaycf-c4mp71IhVgV3pmYQaCgYKAXoSARESFQHGX2MiGOHhO-sK8zd5IgPNguK4dw0181" | gcloud auth activate-refresh-token shushankbhatia@gmail.com

      - name: Configure Docker Authentication
        run: gcloud auth configure-docker asia-south1-docker.pkg.dev

      - name: Pull Image from Source Artifact Registry
        run: |
          docker pull ${{ github.event.inputs.name }}
      - name: Modify Image 
        run: |
          echo "Modify your image here if needed..."
          # Example: Running a script or copying files
          # docker run --rm -v "$PWD:/app" ${{ github.event.inputs.name }} /bin/bash -c "echo 'Hello' > /app/test.txt"

      - name: Build New Docker Image
        run: |
          echo "Building new image..."

      - name: Sanity Check
        run: |
          echo "Checking built image..."
          echo "Image built successfully!"
          echo "sanity checks succefull!"
          
      - name: Download JSON Data from Google Cloud Storage
        run: |
          FORMATTED_NAME=$(echo "${{ inputs.name }}" | sed 's/\//_/g')
          gsutil cp gs://stagingb/${FORMATTED_NAME}.json /tmp/your-file.json

      - name: Parse JSON and Insert into PostgreSQL
        run: |
            JSON_FILE="/tmp/your-file.json"
            ID=$(jq -r '.id' "$JSON_FILE")
            TAGS=$(jq -r '.tags | @csv' "$JSON_FILE")

            # Convert CSV to PostgreSQL array format
            TAGS_PG_ARRAY="{$TAGS}"

            PGPASSWORD="AVNS_AqVTKx8DS17lyKhyrDg" psql -h atlan-hack-001-a-atlan-hack-001.d.aivencloud.com -p 11418 -U avnadmin -d defaultdb -c "
              INSERT INTO image_store (image_name, tags) 
              VALUES ('$ID', '$TAGS_PG_ARRAY')
              ON CONFLICT (image_name) 
              DO UPDATE SET tags = array_cat(image_store.tags, EXCLUDED.tags);
            "

      - name: Tag Image for Destination Artifact Registry
        run: |
          docker tag ${{ github.event.inputs.name }} \
                     asia-south1-docker.pkg.dev/swarna-380521/cloud-run-source-deploy/hello-app:1.0

          
      - name: Push Docker Image
        run: |
          docker push asia-south1-docker.pkg.dev/swarna-380521/cloud-run-source-deploy/hello-app:1.0
